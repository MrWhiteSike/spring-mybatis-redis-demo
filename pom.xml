<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.bsk</groupId>
  <artifactId>spring-mybatis-redis-demo</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>

  <name>spring-mybatis-redis-demo</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <spring.version>4.2.0.RELEASE</spring.version>
  </properties>

  <dependencies>
  	
  	<!-- spring mvc related.....start --> <!-- TODO: replace jackson with fastjson -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-context</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-aop</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-webmvc</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-web</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>javax.servlet</groupId>
		<artifactId>jstl</artifactId>
		<version>1.2</version>
	</dependency>
	<dependency>
		<groupId>commons-logging</groupId>
		<artifactId>commons-logging</artifactId>
		<version>1.1.3</version>
	</dependency>
	<dependency>
		<groupId>org.codehaus.jackson</groupId>
		<artifactId>jackson-mapper-asl</artifactId>
		<version>1.9.13</version>
	</dependency>
	<dependency>
		<groupId>com.fasterxml.jackson.core</groupId>
		<artifactId>jackson-annotations</artifactId>
		<version>2.6.1</version>
	</dependency>
	<dependency>
		<groupId>com.fasterxml.jackson.core</groupId>
		<artifactId>jackson-core</artifactId>
		<version>2.6.1</version>
	</dependency>
	<dependency>
		<groupId>com.fasterxml.jackson.core</groupId>
		<artifactId>jackson-databind</artifactId>
		<version>2.6.1</version>
	</dependency>
	<!-- spring mvc related.....end -->

	<!-- mybatis orm related.....start -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-orm</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.mybatis</groupId>
		<artifactId>mybatis-spring</artifactId>
		<version>1.2.3</version>
	</dependency>
	<dependency>
		<groupId>mysql</groupId>
		<artifactId>mysql-connector-java</artifactId>
		<version>5.1.6</version>
	</dependency>
	<dependency>
		<groupId>org.mybatis</groupId>
		<artifactId>mybatis</artifactId>
		<version>3.3.0</version>
	</dependency>
	<dependency>
		<groupId>c3p0</groupId>
		<artifactId>c3p0</artifactId>
		<version>0.9.1.2</version>
	</dependency>
	<dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>slf4j-log4j12</artifactId>
		<version>1.7.12</version>
	</dependency>
	<!-- mybatis orm related.....end -->

	<!-- project log related.....start -->
	<dependency>
		<groupId>log4j</groupId>
		<artifactId>log4j</artifactId>
		<version>1.2.17</version>
	</dependency>
	<!-- project log related.....end -->

	<!-- redis cache related.....start -->
	<dependency>
		<groupId>org.springframework.data</groupId>
		<artifactId>spring-data-redis</artifactId>
		<version>1.6.0.RELEASE</version>
	</dependency>
	<dependency>
		<groupId>redis.clients</groupId>
		<artifactId>jedis</artifactId>
		<version>2.7.3</version>
	</dependency>
	<!-- redis cache related.....end -->
  
  	<!-- junit start -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.8.2</version>
      <scope>test</scope>
    </dependency>
    <!-- junit end -->
    
  </dependencies>
  
  	<build>
<!--   		<filters> -->
	        <!-- 过滤文件,通常是一个属性文件（名值对的形式） -->
<!-- 	        <filter>src/main/webapp/META-INF/auto-config.properties</filter> -->
	        <!--
	            <filter>${user.home}/antx.properties</filter>
	        -->
<!-- 	    </filters> -->
<!-- 	    <finalName>communitytag</finalName> -->
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<configuration>
<!-- 					<warSourceDirectory>src/main/webapp</warSourceDirectory> -->
<!-- 					<failOnMissingWebXml>false</failOnMissingWebXml> -->
					
					<!--
			                    打包之前过滤掉不想要被打进 .war包的jar,注意：这个地方，本来路径应该是
			                    WEB-INF/lib/anaalyzer-2.0.4.jar,但是经过多次试验,不能这样，至于咋回事儿，搞不清楚。。经多方查证均无结果
			                    暂且这样吧，虽然显得很丑陋，但是总能解决问题吧
	                -->
<!-- 	                <warSourceExcludes>*/lib/analyzer-2.0.4.jar</warSourceExcludes> -->
	                <webResources>
	                    <resource>
<!-- 	                        元配置文件的目录，相对于pom.xml文件的路径 -->
	                        <directory>src/main/webapp/WEB-INF</directory>
	 
<!-- 	                        是否过滤文件，也就是是否启动过虑auto-config的功能 -->
<!--  	                        <filtering>true</filtering>  -->
	 
<!-- 	                        目标路径 -->
	                        <targetPath>WEB-INF</targetPath>
	                    </resource>
	                    
	                    <!--  -->
	                    <resource>
							<!-- this is relative to the pom.xml directory -->
							<directory>src/main/java</directory>
							<includes>
								<include>**/*.xml</include>								 
							</includes>
							<targetPath>WEB-INF/classes</targetPath>
						</resource>
						
	                </webResources>
					
				</configuration>
			</plugin>
		</plugins>
	</build>
  
</project>
